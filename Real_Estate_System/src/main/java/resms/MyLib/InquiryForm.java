/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package resms.MyLib;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import resms.Factory.PaymentForm;
import resms.MyApp.MainForm1;
import resms.MyLib.Lot;
import resms.MyLib.Lot_List;
import resms.Template.Reservation;

/**
 *
 * @author Buena, Lucas, Lumba, Magana, Paita, Tambagan
 */
public class InquiryForm extends javax.swing.JFrame {

    /**
     * Creates new form InquiryForm
     */
    int size;
    int block;
    int lot;
    int minPrice;
    int maxPrice;
    
    int i;
    
    public Lot_List LotList;
    
    public InquiryForm(Lot_List LotList) {
        initComponents();
        this.LotList = LotList;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        maxInput = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        blockInput = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        minInput = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        exactSearchButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lotInput = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayArea = new javax.swing.JTextArea();
        sizeInput = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        paymentButton = new javax.swing.JButton();
        reserveButton = new javax.swing.JButton();
        partialSearchButton = new javax.swing.JButton();
        mainmenuButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));

        maxInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxInputActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel3.setText("Lot Location");

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel4.setText("Block:");

        blockInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockInputActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel5.setText("Lot:");

        minInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minInputActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Rockwell", 0, 24)); // NOI18N
        jLabel1.setText("Enter Preferences");

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel6.setText("Price Range");

        exactSearchButton.setBackground(new java.awt.Color(255, 255, 204));
        exactSearchButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        exactSearchButton.setText("Search");
        exactSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exactSearchButtonActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel7.setText("Minimum: Php");

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel2.setText("Lot Size:");

        lotInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lotInputActionPerformed(evt);
            }
        });

        displayArea.setColumns(20);
        displayArea.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        displayArea.setRows(5);
        jScrollPane1.setViewportView(displayArea);

        sizeInput.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        sizeInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeInputActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel8.setText("Maximum: Php");

        jLabel9.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel9.setText("square meters");

        paymentButton.setBackground(new java.awt.Color(255, 255, 204));
        paymentButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        paymentButton.setText("Proceed to Payment");
        paymentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentButtonActionPerformed(evt);
            }
        });

        reserveButton.setBackground(new java.awt.Color(255, 255, 204));
        reserveButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        reserveButton.setText("Reserve Lot");
        reserveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveButtonActionPerformed(evt);
            }
        });

        partialSearchButton.setBackground(new java.awt.Color(255, 255, 204));
        partialSearchButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        partialSearchButton.setText("View PARTIAL Matches");
        partialSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                partialSearchButtonActionPerformed(evt);
            }
        });

        mainmenuButton.setBackground(new java.awt.Color(255, 255, 204));
        mainmenuButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        mainmenuButton.setText("Return to Main Menu");
        mainmenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainmenuButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(mainmenuButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sizeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(blockInput, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel7))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lotInput, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(minInput)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(maxInput, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(exactSearchButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(partialSearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(reserveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(paymentButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(sizeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(blockInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(lotInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(minInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(maxInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exactSearchButton)
                            .addComponent(partialSearchButton)))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mainmenuButton)
                    .addComponent(reserveButton)
                    .addComponent(paymentButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void minInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minInputActionPerformed
       
    }//GEN-LAST:event_minInputActionPerformed

    private void lotInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lotInputActionPerformed
        
    }//GEN-LAST:event_lotInputActionPerformed

    private void maxInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxInputActionPerformed
        
    }//GEN-LAST:event_maxInputActionPerformed

    private void blockInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockInputActionPerformed
        
    }//GEN-LAST:event_blockInputActionPerformed

    private void sizeInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeInputActionPerformed
        
    }//GEN-LAST:event_sizeInputActionPerformed

    private void exactSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exactSearchButtonActionPerformed
        displayArea.setText("");
            
        if (sizeInput.getText().isEmpty()) {
            size = 0;
        }
        else
            size = Integer.parseInt(sizeInput.getText());
        
        if (blockInput.getText().isEmpty()) {
            block = 0;
        } else
            block = Integer.parseInt(blockInput.getText());
        
        if (lotInput.getText().isEmpty()) {
            lot = 0;
        } else
            lot = Integer.parseInt(lotInput.getText());
        
        if (maxInput.getText().isEmpty()) {
            maxPrice = 0;
        } else
            maxPrice = Integer.parseInt(maxInput.getText());
        
        if (minInput.getText().isEmpty()) {
            minPrice = 0;
        } else
            minPrice = Integer.parseInt(minInput.getText());
        
        checkAvailability(size, block, lot, minPrice, maxPrice);
        
        
    }//GEN-LAST:event_exactSearchButtonActionPerformed

    private void paymentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentButtonActionPerformed
        PaymentForm payment = new PaymentForm(LotList);
        payment.setVisible(true);
    }//GEN-LAST:event_paymentButtonActionPerformed

    private void reserveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveButtonActionPerformed
        ReservationForm reservation = new ReservationForm(LotList);
        reservation.setVisible(true);
    }//GEN-LAST:event_reserveButtonActionPerformed

    private void partialSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_partialSearchButtonActionPerformed
        displayArea.setText("");

        if (sizeInput.getText().isEmpty()) {
            size = 0;
        } else {
            size = Integer.parseInt(sizeInput.getText());
        }

        if (blockInput.getText().isEmpty()) {
            block = 0;
        } else {
            block = Integer.parseInt(blockInput.getText());
        }

        if (lotInput.getText().isEmpty()) {
            lot = 0;
        } else {
            lot = Integer.parseInt(lotInput.getText());
        }

        if (maxInput.getText().isEmpty()) {
            maxPrice = 0;
        } else {
            maxPrice = Integer.parseInt(maxInput.getText());
        }

        if (minInput.getText().isEmpty()) {
            minPrice = 0;
        } else {
            minPrice = Integer.parseInt(minInput.getText());
        }

        checkPartial(size, block, lot, minPrice, maxPrice);
    }//GEN-LAST:event_partialSearchButtonActionPerformed

    private void mainmenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainmenuButtonActionPerformed
        MainForm1 mainform = new MainForm1(LotList);
        mainform.setVisible(true);
    }//GEN-LAST:event_mainmenuButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void checkAvailability(double size, int block, int lot, double minPrice, double maxPrice) {
        int matchCounter = 0; //number of exact matches

        // checks for exact matches and displays them   
        for (i = 0; i < LotList.getListSize(); i++) {
            if ((LotList.getLotSize(i) == size) && (LotList.getBlock(i) == block) && (LotList.getLot(i) == lot) && ((LotList.getPrice(i) >= minPrice) && (LotList.getPrice(i)) <= maxPrice) && (LotList.getStatus(i) == "For Sale")){
                displayArea.append(
                        "Lot Num: " + LotList.getLotNum(i) + "\n" +
                        LotList.getLotType(i) + "\n" +
                        "Size: " + LotList.getLotSize(i) + " sqm" + "\n" +
                        "Location: Block " + LotList.getBlock(i) + " Lot " + LotList.getLot(i) + "\n" +
                        "Price: Php " + LotList.getPrice(i) + "\n"
                        + "\n"
                );
                matchCounter++;
            }//ends if statement 
        }//ends for loop
        
        
        if (matchCounter == 0) {
            displayArea.setWrapStyleWord(true);
            displayArea.setLineWrap(true);
            displayArea.append("There are no available lots that match your description.");
        }
    }//ends checkAvailability() method
    
    public void checkPartial(double size, int block, int lot, double minPrice, double maxPrice) {
        int matchCounter = 0; //number of exact matches

        // checks for exact matches and displays them   
        for (i = 0; i < LotList.getListSize(); i++) {
            if ((LotList.getLotSize(i) == size) || (LotList.getBlock(i) == block) || (LotList.getLot(i) == lot) || ((LotList.getPrice(i) >= minPrice) && (LotList.getPrice(i)) <= maxPrice) && (LotList.getStatus(i) == "For Sale")) {
                displayArea.append(
                        "Lot Num: " + LotList.getLotNum(i) + "\n"
                        + LotList.getLotType(i) + "\n"
                        + "Size: " + LotList.getLotSize(i) + " sqm" + "\n"
                        + "Location: Block " + LotList.getBlock(i) + " Lot " + LotList.getLot(i) + "\n"
                        + "Price: Php " + LotList.getPrice(i) + "\n"
                        + "\n"
                );
                matchCounter++;
            }//ends if statement 
        }//ends for loop

        if (matchCounter == 0) {
            displayArea.setWrapStyleWord(true);
            displayArea.setLineWrap(true);
            displayArea.append("There are no available lots that match your description.");
        }
    }//ends checkAvailability() method
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField blockInput;
    private javax.swing.JTextArea displayArea;
    private javax.swing.JButton exactSearchButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lotInput;
    private javax.swing.JButton mainmenuButton;
    private javax.swing.JTextField maxInput;
    private javax.swing.JTextField minInput;
    private javax.swing.JButton partialSearchButton;
    private javax.swing.JButton paymentButton;
    private javax.swing.JButton reserveButton;
    private javax.swing.JTextField sizeInput;
    // End of variables declaration//GEN-END:variables
}



//  Buena, Lucas, Lumba, Magana, Paita, Tambagan
//  CSS123L - BM3 - FINAL PROJECT
//  08/07/2023
